// Generated by CoffeeScript 1.10.0
var baseDir, files, findDrive, fs, omx, play, prompt, prompter, sendCmd;

omx = require('omxdirector');

prompter = require('single-prompt');

fs = require('fs');

baseDir = "/media/pi/";

omx.enableNativeLoop();

files = [];

findDrive = function() {
  console.log("Finding Media...");
  return fs.readdir(baseDir, function(err, dirFiles) {
    var f, i, len, results;
    if (err) {
      throw err;
    }
    results = [];
    for (i = 0, len = dirFiles.length; i < len; i++) {
      f = dirFiles[i];
      if (fs.lstatSync(baseDir + f).isDirectory()) {
        console.log("Removable Media Found: " + f);
        files = [];
        omx.setVideoDir(baseDir + f);
        results.push(fs.readdir(baseDir + f, function(mediaFilesErr, mediaFiles) {
          var j, len1, mediaFile;
          for (j = 0, len1 = mediaFiles.length; j < len1; j++) {
            mediaFile = mediaFiles[j];
            if (mediaFile.indexOf(".mov") > -1 || mediaFile.indexOf(".mp4") > -1) {
              console.log("found movie: ", mediaFile);
              files.push(mediaFile);
            }
          }
          if (files.length > 0) {
            return play();
          }
        }));
      } else {
        results.push(void 0);
      }
    }
    return results;
  });
};

play = function() {
  console.log("playing...", files);
  prompt();
  return omx.play(files, {
    loop: true
  });
};

sendCmd = function(key) {
  switch (key) {
    case ' ':
      if (omx.isPlaying()) {
        omx.pause();
      }
      if (!omx.isPlaying() && omx.isLoaded()) {
        omx.play();
      }
      break;
    case 'q':
      omx.stop();
  }
  return prompt();
};

prompt = function() {
  return prompter.prompt("omxCmd:", [' ', 'q']).then(function(choice) {
    return sendCmd(choice);
  });
};

findDrive();

//# sourceMappingURL=simplePlayer.js.map
